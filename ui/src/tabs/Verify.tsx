import { useState } from "react";
import Box from "@mui/material/Box";
import TextField from "@mui/material/TextField";
import Button from "@mui/material/Button";
import Alert from "@mui/material/Alert";
import { verifyProof } from "../contract";
import Loading from "./components/Loading";
import { Typography } from "@mui/material";

export default function Upload() {
    const [result, setResult] = useState("");

    const [error, setError] = useState(false);
    const [errorMsg, setErrorMsg] = useState("");
    const [Verifying, setVerifying] = useState(false);

    const verifyDeposit = async (event: any) => {
        event.preventDefault();
        setError(false);

        setResult('');
        setVerifying(true);

        const input = {
            value: "10",
            fee: "1",
            transactionType: "0",
            tokenType: "0",
            historicRootBlockNumberL2: ["0", "0", "0", "0"],
            tokenId: ["0", "0", "0", "0", "0", "0", "0", "0"],
            ercAddress: "960699023364902747365841658758402216564479912730",
            recipientAddress: ["0", "0", "0", "0", "0", "0", "0", "0"],
            commitments: [
              "18194298703583555145399719899310559283497951657938518952689475720866966491995",
              "0",
              "0",
            ],
            nullifiers: ["0", "0", "0", "0"],
            compressedSecrets: ["0", "0"],
            salt: "18695785846276126922150156231153876831829526029353662941356423108480790596349",
            recipientPublicKey: [
              "8490685904787475746369366901729727151930997402058548597274067437080179631982",
              "16019898780588040648157153023567746553375452631966740349901590026272037097498",
            ],
          };
      
        const verifyResult = await verifyProof(input, "deposit")
        .catch((error: any) => {
            setErrorMsg(error.toString());
            setError(true);
            setVerifying(false);
        });

        setResult('Verification successful!');
        console.log('Verify_deposit:', verifyResult);

        setVerifying(false);
        event.preventDefault();
    }

    const verifyTransfer = async (event: any) => {
        event.preventDefault();
        setError(false);

        setResult('');
        setVerifying(true);

        const input = {
            value: "5",
            fee: "1",
            transactionType: "2",
            tokenType: "0",
            historicRootBlockNumberL2: ["11", "0", "0", "0"],
            tokenId: ["0", "0", "0", "0", "0", "0", "0", "0"],
            ercAddress: "960699023364902747365841658758402216564479912730",
            recipientAddress: ["0", "0", "0", "2626364022", "3566212122", "3779333542", "1625583847", "3224673379"],
            commitments: [ "0","0","0"],
            nullifiers: ["16690496559407775916445446834537593700685561270220665077969058823409836852962","0","0","0"],
            compressedSecrets: ["0","0"],
            roots: ["19888252068360704972617775472110099774585749824932080815253069067751286763241", "0", "0", "0"],
            maticAddress : "960699023364902747365841658758402216564479912730",
            nullifiersValues: [["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]],
            nullifiersSalts: ["910933311403153886573492298157915218632336554348728064053859916887894000808", "0", "0", "0"],
            rootKey: ["2279923558995011751611063584918713773156544989985830828459384641106187332209", "2279923558995011751611063584918713773156544989985830828459384641106187332209", "2279923558995011751611063584918713773156544989985830828459384641106187332209", "2279923558995011751611063584918713773156544989985830828459384641106187332209"],
            paths: [["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "18394191839627464572507032832509135503142752581515568090019488802383358242240", "16738089486957597367685845935934957606225805288164149997419763669908395117814", "0", "21077168410262108127630258607467506773356963766951707343352808602383723322174"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]],
            orders: ["13", "0", "0", "0"],
            commitmentsValues: [["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]],
            commitmentsSalts: ["0", "0"],
            recipientPublicKey: [["0", "0"], ["0", "0"]],
            ephemeralKey: ["0", "0", "0", "0", "0", "0", "0", "0"],
            ercAddressTransfer: "960699023364902747365841658758402216564479912730",
            idTransfer: ["0", "0", "0", "0", "0", "0", "0", "0"]
          };
      
        const verifyResult = await verifyProof(input, "transfer")
        .catch((error: any) => {
            setErrorMsg(error.toString());
            setError(true);
            setVerifying(false);
        });

        setResult('Verification successful!');
        console.log('Verify_transfer:', verifyResult);

        setVerifying(false);
        event.preventDefault();
    }

    const verifyWithdraw = async (event: any) => {
        event.preventDefault();
        setError(false);

        setResult('');
        setVerifying(true);

        const input = {
            value: "5",
            fee: "1",
            transactionType: "2",
            tokenType: "0",
            historicRootBlockNumberL2: ["11", "0", "0", "0"],
            tokenId: ["0", "0", "0", "0", "0", "0", "0", "0"],
            ercAddress: "960699023364902747365841658758402216564479912730",
            recipientAddress: ["0", "0", "0", "2626364022", "3566212122", "3779333542", "1625583847", "3224673379"],
            commitments: [ "0","0","0"],
            nullifiers: ["16690496559407775916445446834537593700685561270220665077969058823409836852962","0","0","0"],
            compressedSecrets: ["0","0"],
            roots: ["19888252068360704972617775472110099774585749824932080815253069067751286763241", "0", "0", "0"],
            maticAddress : "960699023364902747365841658758402216564479912730",
            nullifiersValues: [["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "6"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]],
            nullifiersSalts: ["910933311403153886573492298157915218632336554348728064053859916887894000808", "0", "0", "0"],
            rootKey: ["2279923558995011751611063584918713773156544989985830828459384641106187332209", "2279923558995011751611063584918713773156544989985830828459384641106187332209", "2279923558995011751611063584918713773156544989985830828459384641106187332209", "2279923558995011751611063584918713773156544989985830828459384641106187332209"],
            paths: [["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "18394191839627464572507032832509135503142752581515568090019488802383358242240", "16738089486957597367685845935934957606225805288164149997419763669908395117814", "0", "21077168410262108127630258607467506773356963766951707343352808602383723322174"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]],
            orders: ["13", "0", "0", "0"],
            commitmentsValues: [["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]],
            commitmentsSalts: ["0", "0"],
            recipientPublicKey: [["0", "0"], ["0", "0"]]
          };
      
        const verifyResult = await verifyProof(input, "withdraw")
        .catch((error: any) => {
            setErrorMsg(error.toString());
            setError(true);
            setVerifying(false);
        });

        setResult('Verification successful!');
        console.log('Verify_withdraw:', verifyResult);

        setVerifying(false);
        event.preventDefault();
    }

    return (
        <Box
            component="form"
            sx={{
                "& .MuiTextField-root": { m: 1, width: "25ch" },
                width: "99%", maxWidth: 600, margin: 'auto'
            }}
            noValidate
            autoComplete="off"
            textAlign="center"
        >

            <Button
                onClick={verifyDeposit}
                variant="contained">
                Verify deposit
            </Button>&nbsp;
            <Button
                onClick={verifyTransfer}
                variant="contained">
                Verify transfer
            </Button>&nbsp;
            <Button
                onClick={verifyWithdraw}
                variant="contained">
                Verify withdraw
            </Button>
            <br /><br />
            {Verifying ? <Loading text="Verifying proof..." /> : <div />}
            {error ? <Alert severity="error" sx={{ textAlign: "left" }}>{errorMsg}</Alert> : <div />}
            <Typography>{result}</Typography>
        </Box>
    );
}